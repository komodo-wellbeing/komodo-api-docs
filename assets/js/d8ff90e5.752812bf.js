"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[910],{7957:(e,t,n)=>{n.d(t,{Z:()=>d});var s=n(7294),a=n(614);const r={apiRequest:"apiRequest_QBr9",headingTag:"headingTag_WEVs",contents:"contents_XaVX",h1:"h1_dzso",h2:"h2_rWt0",h3:"h3_bL_Z",baseUrl:"baseUrl_J7Gk",tag:"tag_yP95",blueTag:"blueTag_WtG7",response:"response_nelD",responseExample:"responseExample_SxXl"};var l=n(9960);const o="#E63B19",i={200:{label:"Successful",color:"#2CDD9C"},400:{label:"Bad Request",color:o},401:{label:"Forbidden",color:o}};function d(e){let{type:t,url:n,request:o,responses:d}=e;return s.createElement("div",{className:r.apiRequest},s.createElement("div",{className:r.headingTag},"\ud83d\ude80 ",t),s.createElement("div",{className:r.contents},s.createElement("h1",{className:r.h1},s.createElement("span",{className:r.baseUrl},s.createElement(l.Z,{href:"/docs/environments"},"BASE_URL")),n),o&&s.createElement(s.Fragment,null,s.createElement("h2",{className:r.h2},"Request"),o.headers&&o.headers.length>0&&s.createElement(s.Fragment,null,s.createElement("h3",{className:r.h3},"Headers"),s.createElement("ul",null,o.headers.map((e=>s.createElement("li",null,s.createElement("span",{className:r.blueTag},e.name)," ",e.description))))),o.example&&s.createElement(a.Z,{language:"json",showLineNumbers:!0},o.example)),d&&d.length>0&&s.createElement(s.Fragment,null,s.createElement("h2",{className:r.h2},"Responses"),d.map((e=>s.createElement("div",{className:r.response},s.createElement("span",{style:{backgroundColor:i[e.status].color},className:r.tag},e.status," ",i[e.status].label),e.description&&` ${e.description}`,e.example&&s.createElement("div",{className:r.responseExample},s.createElement(a.Z,{language:"json",showLineNumbers:!0},e.example))))))))}},3193:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>u});var s=n(7462),a=(n(7294),n(3905)),r=n(7957);const l={id:"cube-load",title:"Loading Data",slug:"/cube/load/"},o=void 0,i={unversionedId:"cube-load",id:"cube-load",title:"Loading Data",description:"This is how you can retrieve the data for a given query.",source:"@site/docs/cube-load.mdx",sourceDirName:".",slug:"/cube/load/",permalink:"/komodo-api-docs/docs/cube/load/",draft:!1,tags:[],version:"current",frontMatter:{id:"cube-load",title:"Loading Data",slug:"/cube/load/"},sidebar:"docs",previous:{title:"Meta Information",permalink:"/komodo-api-docs/docs/cube/meta/"}},d={},u=[{value:"Request",id:"request",level:2},{value:"External Links",id:"external-links",level:2}],m={toc:u},c="wrapper";function p(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,s.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"This is how you can retrieve the data for a given query."),(0,a.kt)("h2",{id:"request"},"Request"),(0,a.kt)(r.Z,{type:"GET",url:"/cube/v1/load",request:{headers:[{name:"Authorization",description:"Token returned by authentication process"}],example:'{\n    "dimensions": ["Students.id", "Students.firstname", "Students.lastname"],\n    "measures": [],\n    "segments": [],\n}'},responses:[{status:200,example:'{\n    // The query passed in requests params\n    "query": {\n        "dimensions": ["Students.id", "Students.firstname", "Students.lastname"],\n        "measures": [],\n        "segments": [],\n    },\n    // Formatted dataset of query results\n    "data": [\n        {\n            "Students.id": "1",\n            "Students.firstname": "Billie",\n            "Students.lastname": "Eyelash",\n        },\n        {\n            "Students.id": "2",\n            "Students.firstname": "Denzel",\n            "Students.lastname": "Oregon",\n        },\n        {\n            "Students.id": "3",\n            "Students.firstname": "Vin",\n            "Students.lastname": "Petrol",\n        },\n        ...\n    ],\n    // Metadata for query\n    "annotation": {\n        "dimensions": {\n            "Students.id": {\n                "title": "Students Id",\n                "shortTitle": "Id",\n                "type": "number",\n            },\n            "Students.firstname": {\n                "title": "Students Firstname",\n                "shortTitle": "Firstname",\n                "type": "string",\n            },\n            "Students.lastname": {\n                "title": "Students Lastname",\n                "shortTitle": "Lastname",\n                "type": "string",\n            },\n        },\n        "measures": {},\n        "segments": {},\n    }\n}'},{status:400,description:"Invalid query",example:"{\n    \"error\": \"'foo' not found for path 'Students.foo'\",\n}"},{status:401,description:"Missing or invalid authentication token",example:'{\n    "error": "Unauthorized",\n}'}],mdxType:"ApiRequest"}),(0,a.kt)("h2",{id:"external-links"},"External Links"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://cube.dev/docs/reference/rest-api#v1load"},"Cube REST API")))}p.isMDXComponent=!0}}]);