"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6898],{79789:(e,s,n)=>{n.d(s,{A:()=>d});var t=n(56289),a=n(43413);const r={apiRequest:"apiRequest_QBr9",headingTag:"headingTag_WEVs",contents:"contents_XaVX",h1:"h1_dzso",h2:"h2_rWt0",h3:"h3_bL_Z",baseUrl:"baseUrl_J7Gk",tag:"tag_yP95",blueTag:"blueTag_WtG7",response:"response_nelD",responseExample:"responseExample_SxXl"};var i=n(74848);const l="#E63B19",o={200:{label:"Successful",color:"#2CDD9C"},400:{label:"Bad Request",color:l},401:{label:"Forbidden",color:l}};function d(e){let{type:s,url:n,request:l,responses:d}=e;return(0,i.jsxs)("div",{className:r.apiRequest,children:[(0,i.jsxs)("div",{className:r.headingTag,children:["\ud83d\ude80 ",s]}),(0,i.jsxs)("div",{className:r.contents,children:[(0,i.jsxs)("h1",{className:r.h1,children:[(0,i.jsx)("span",{className:r.baseUrl,children:(0,i.jsx)(t.default,{href:"/docs/getting-started#environments",children:"BASE_URL"})}),n]}),l&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{className:r.h2,children:"Request"}),l.headers&&l.headers.length>0&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h3",{className:r.h3,children:"Headers"}),(0,i.jsx)("ul",{children:l.headers.map((e=>(0,i.jsxs)("li",{children:[(0,i.jsx)("span",{className:r.blueTag,children:e.name})," ",e.description]})))})]}),l.example&&(0,i.jsx)(a.default,{language:"js",showLineNumbers:!0,children:l.example})]}),d&&d.length>0&&(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("h2",{className:r.h2,children:"Responses"}),d.map((e=>(0,i.jsxs)("div",{className:r.response,children:[(0,i.jsxs)("span",{style:{backgroundColor:o[e.status].color},className:r.tag,children:[e.status," ",o[e.status].label]}),e.description&&` ${e.description}`,e.example&&(0,i.jsx)("div",{className:r.responseExample,children:(0,i.jsx)(a.default,{language:"js",showLineNumbers:!0,children:e.example})})]})))]})]})]})}},79913:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cube-meta","title":"Meta Information","description":"The Cube API is deprecated, and the REST API should be used instead.","source":"@site/docs/cube-meta.mdx","sourceDirName":".","slug":"/cube/meta/","permalink":"/komodo-api-docs/docs/cube/meta/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"cube-meta","title":"Meta Information","slug":"/cube/meta/"},"sidebar":"docs","previous":{"title":"Authentication","permalink":"/komodo-api-docs/docs/cube/auth/"},"next":{"title":"Loading Data","permalink":"/komodo-api-docs/docs/cube/load/"}}');var a=n(74848),r=n(28453),i=n(79789);const l={id:"cube-meta",title:"Meta Information",slug:"/cube/meta/"},o=void 0,d={},c=[{value:"Request",id:"request",level:2},{value:"External Links",id:"external-links",level:2}];function u(e){const s={a:"a",admonition:"admonition",h2:"h2",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.admonition,{title:"Deprecated",type:"danger",children:(0,a.jsxs)(s.p,{children:["The Cube API is deprecated, and the ",(0,a.jsx)(s.a,{href:"/komodo-api-docs/docs/rest/v1/komodo-rest-api",children:"REST API"})," should be used instead."]})}),"\n",(0,a.jsx)(s.p,{children:"Meta-information for the cubes defined in the data model can be retrieved."}),"\n",(0,a.jsx)(s.h2,{id:"request",children:"Request"}),"\n",(0,a.jsx)(i.A,{type:"GET",url:"/cube/v1/meta",request:{headers:[{name:"Authorization",description:"Token returned by authentication process"}]},responses:[{status:200,example:'{\n  "cubes": [\n      "public": true,\n      "name": "Groups",\n      "title": "Groups",\n      "dimensions": [\n          {\n              "name": "Groups.id",\n              "title": "Groups Id",\n              "description": "The group\'s ID in Komodo Wellbeing",\n              "type": "number",\n              "shortTitle": "Id",\n              "suggestFilterValues": true,\n              "isVisible": true,\n          },\n          {\n              "name": "Groups.name",\n              "title": "Groups Name",\n              "description": "The name of the group",\n              "type": "string",\n              "shortTitle": "Name",\n              "suggestFilterValues": true,\n              "isVisible": true,\n          },\n          ...\n      ],\n      "measures": [\n          {\n              "name": "Groups.count",\n              "title": "Groups Count",\n              "shortTitle": "Count",\n              "type": "number",\n              "aggType": "count",\n              "isVisible": true,\n          },\n          ...\n      ],\n      "segments": [...],\n      ...\n  ]\n}'},{status:401,description:"Missing or invalid authentication token",example:'{\n  "error": "Unauthorized",\n}'}]}),"\n",(0,a.jsx)(s.h2,{id:"external-links",children:"External Links"}),"\n",(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://cube.dev/docs/reference/rest-api#v1meta",children:"Cube REST API"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}}}]);