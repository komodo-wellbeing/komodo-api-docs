"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2068],{32335:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>d,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"cube","title":"Introduction","description":"The Cube API is deprecated, and the REST API should be used instead.","source":"@site/docs/cube.md","sourceDirName":".","slug":"/cube/","permalink":"/komodo-api-docs/docs/cube/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"cube","title":"Introduction","slug":"/cube/"},"sidebar":"docs","previous":{"title":"Get user\'s normalised survey responses","permalink":"/komodo-api-docs/docs/rest/v1/get-users-normalised-survey-responses"},"next":{"title":"Authentication","permalink":"/komodo-api-docs/docs/cube/auth/"}}');var t=i(74848),r=i(28453);const d={id:"cube",title:"Introduction",slug:"/cube/"},o=void 0,l={},a=[{value:"Cube Explained",id:"cube-explained",level:2},{value:"Dimensions",id:"dimensions",level:3},{value:"Measures",id:"measures",level:3},{value:"Segments",id:"segments",level:3},{value:"Filters",id:"filters",level:3},{value:"Time Dimensions",id:"time-dimensions",level:3},{value:"External Links",id:"external-links",level:2}];function c(e){const s={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.admonition,{title:"Deprecated",type:"danger",children:(0,t.jsxs)(s.p,{children:["The Cube API is deprecated, and the ",(0,t.jsx)(s.a,{href:"/komodo-api-docs/docs/rest/v1/komodo-rest-api",children:"REST API"})," should be used instead."]})}),"\n",(0,t.jsxs)(s.p,{children:["All requests made to the Cube API must include an ",(0,t.jsx)(s.code,{children:"Authorization"})," header, which is set to the token returned by the authentication process (",(0,t.jsx)(s.a,{href:"/komodo-api-docs/docs/cube/auth/",children:"see here"}),")."]}),"\n",(0,t.jsx)(s.h2,{id:"cube-explained",children:"Cube Explained"}),"\n",(0,t.jsx)(s.h3,{id:"dimensions",children:"Dimensions"}),"\n",(0,t.jsx)(s.p,{children:"Dimensions in Cube are attributes related to the record(s) in question, e.g. id, name, description, etc."}),"\n",(0,t.jsx)(s.h3,{id:"measures",children:"Measures"}),"\n",(0,t.jsx)(s.p,{children:"Measures are aggregations of data."}),"\n",(0,t.jsx)(s.h3,{id:"segments",children:"Segments"}),"\n",(0,t.jsx)(s.p,{children:"Segments are predefined filters."}),"\n",(0,t.jsx)(s.h3,{id:"filters",children:"Filters"}),"\n",(0,t.jsx)(s.p,{children:"Filters are ways you can filter returned query results."}),"\n",(0,t.jsx)(s.h3,{id:"time-dimensions",children:"Time Dimensions"}),"\n",(0,t.jsx)(s.p,{children:"Time Dimensions can be included in a query to limit results to a specific time based on any date or time fields."}),"\n",(0,t.jsx)(s.h2,{id:"external-links",children:"External Links"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://cube.dev/docs/reference/rest-api",children:"Cube REST API"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://cube.dev/docs/product/data-modeling/reference/dimensions",children:"Cube Dimensions"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://cube.dev/docs/product/data-modeling/reference/measures",children:"Cube Measures"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://cube.dev/docs/product/data-modeling/reference/segments",children:"Cube Segments"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://cube.dev/docs/product/apis-integrations/rest-api/query-format#filters-format",children:"Cube Filters"})}),"\n",(0,t.jsx)(s.li,{children:(0,t.jsx)(s.a,{href:"https://cube.dev/docs/product/apis-integrations/rest-api/query-format#time-dimensions-format",children:"Cube Time Dimensions"})}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);