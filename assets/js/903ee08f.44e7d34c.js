"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[9353],{76037:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>y,contentTitle:()=>b,default:()=>T,frontMatter:()=>k,metadata:()=>n,toc:()=>g});const n=JSON.parse('{"id":"rest/v1/get-check-ins","title":"Get check-ins","description":"Get all check-ins in the current organisation","source":"@site/docs/rest/v1/get-check-ins.api.mdx","sourceDirName":"rest/v1","slug":"/rest/v1/get-check-ins","permalink":"/komodo-api-docs/docs/rest/v1/get-check-ins","draft":false,"unlisted":false,"editUrl":null,"tags":[],"version":"current","frontMatter":{"id":"get-check-ins","title":"Get check-ins","description":"Get all check-ins in the current organisation","sidebar_label":"Get check-ins","hide_title":true,"hide_table_of_contents":true,"api":"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","sidebar_class_name":"get api-method","info_path":"docs/rest/v1/komodo-rest-api","custom_edit_url":null,"hide_send_button":true},"sidebar":"docs","previous":{"title":"Authenticate","permalink":"/komodo-api-docs/docs/rest/v1/authenticate"},"next":{"title":"Get check-in","permalink":"/komodo-api-docs/docs/rest/v1/get-check-in"}}');var o=i(74848),s=i(28453),r=i(33617),a=i.n(r),l=i(17543),c=i.n(l),p=i(86013),d=i.n(p),h=i(63723),u=i.n(h),m=(i(18766),i(79329),i(9303));const k={id:"get-check-ins",title:"Get check-ins",description:"Get all check-ins in the current organisation",sidebar_label:"Get check-ins",hide_title:!0,hide_table_of_contents:!0,api:"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",sidebar_class_name:"get api-method",info_path:"docs/rest/v1/komodo-rest-api",custom_edit_url:null,hide_send_button:!0},b=void 0,y={},g=[];function f(e){const t={p:"p",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(m.default,{as:"h1",className:"openapi__heading",children:"Get check-ins"}),"\n",(0,o.jsx)(a(),{method:"get",path:"/check_ins",context:"endpoint"}),"\n",(0,o.jsx)(t.p,{children:"Get all check-ins in the current organisation"}),"\n",(0,o.jsx)(m.default,{id:"request",as:"h2",className:"openapi-tabs__heading",children:"Request"}),"\n",(0,o.jsx)(c(),{parameters:[{name:"limit",in:"query",description:"The number of records.",schema:{type:"number",default:100,minimum:1,maximum:500}},{name:"cursor",in:"query",description:"The ID of the last record viewed. If included, returned results will be starting from the next record ID greater than this value.",schema:{type:"number",default:null}}]}),"\n",(0,o.jsx)(d(),{title:"Body",body:void 0}),"\n",(0,o.jsx)(u(),{id:void 0,label:void 0,responses:{200:{description:"OK",content:{"application/json":{schema:{type:"object",properties:{data:{type:"array",items:{type:"object",properties:{id:{type:"number",description:"The check-in's ID in Komodo Wellbeing"},user_id:{type:"number",description:"The user ID that this check-in is for in Komodo Wellbeing"},type:{type:"string",enum:["GENERATED","REQUESTED","MANUAL"],description:"The check-in's type\n\n  * GENERATED This check-in was automatically generated by Komodo Wellbeing due to a user's survey responses\n  * REQUESTED This check-in was manually requested by a user\n  * MANUAL This check-in is a pastoral note left by a staff member\n"},comment:{type:"string",nullable:!0,description:"A comment left by the user in a REQUESTED check-in"},created_at:{type:"string",format:"date-time",description:"When the check-in was created"},follow_up:{oneOf:[{type:"object",properties:{id:{type:"number",description:"The follow up's ID in Komodo Wellbeing"},check_in_id:{type:"number",description:"The initial check-in's ID in Komodo Wellbeing"},user_id:{type:"number",description:"The ID of the user that created this follow up in Komodo Wellbeing"},created_at:{type:"string",format:"date-time",description:"When the follow up was created"},note:{oneOf:[{type:"object",properties:{note:{type:"string",description:"The note left"},quick_note:{type:"boolean",description:"The user submitted a quick note, rather than filling out the contextual form"}},title:"PastoralNote"},{type:"null"}],description:"The note left on this follow up"},questions:{oneOf:[{type:"array",items:{type:"object",properties:{question:{type:"string",description:"The question prompted to the user making the follow up"},description:{type:"string",description:"More information about the question"},answer:{type:"string",nullable:!0,description:"The answer to the question left by the user making the follow up"}},title:"CheckInFollowUpQuestion"},title:"CheckInFollowUpQuestions"},{type:"null"}],description:"The questions for this follow up, and their responses left"}},title:"CheckInFollowUp"},{type:"null"}],description:"The follow up made to this check-in"},reasons:{oneOf:[{type:"array",items:{type:"object",properties:{id:{type:"number",description:"The check-in reason's ID in Komodo Wellbeing"},metric_id:{type:"number",description:"The metric's ID in Komodo Wellbeing"},check_in_id:{type:"number",description:"The initial check-in's ID in Komodo Wellbeing"},type:{type:"string",enum:["CONSISTENT_LOW","LOW_Z"],description:"What caused this check-in to be generated e.g. low scoring in a survey\n\n  * CONSISTENT_LOW The user scored consistently low for this metric in the last few survey responses\n  * LOW_Z The user scored significantly lower than usual for this metric in the last survey response\n"}},title:"CheckInReason"},title:"CheckInReasons"},{type:"null"}],description:"The reasons involved in a GENERATED check-in being created"}},title:"CheckIn"},title:"CheckIns"},count:"number",has_prev:"boolean",has_next:"boolean",cursor:"number"}}}}},400:{description:"Bad request data",content:{"application/json":{schema:{type:"object",properties:{status:{type:"number"},message:{type:"string"}},title:"Error"}}}},401:{description:"Invalid authentication",content:{"application/json":{schema:{type:"object",properties:{status:{type:"number"},message:{type:"string"}},title:"Error"}}}},500:{description:"Something went wrong processing the request",content:{"application/json":{schema:{type:"object",properties:{status:{type:"number"},message:{type:"string"}},title:"Error"}}}}}})]})}function T(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(f,{...e})}):f(e)}}}]);