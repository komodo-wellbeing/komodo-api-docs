"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[268],{7957:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7294),s=a(614);const o={apiRequest:"apiRequest_QBr9",headingTag:"headingTag_WEVs",contents:"contents_XaVX",h1:"h1_dzso",h2:"h2_rWt0",h3:"h3_bL_Z",baseUrl:"baseUrl_J7Gk",tag:"tag_yP95",blueTag:"blueTag_WtG7",response:"response_nelD",responseExample:"responseExample_SxXl"};var r=a(9960);const l="#E63B19",i={200:{label:"Successful",color:"#2CDD9C"},400:{label:"Bad Request",color:l},401:{label:"Forbidden",color:l}};function c(e){let{type:t,url:a,request:l,responses:c}=e;return n.createElement("div",{className:o.apiRequest},n.createElement("div",{className:o.headingTag},"\ud83d\ude80 ",t),n.createElement("div",{className:o.contents},n.createElement("h1",{className:o.h1},n.createElement("span",{className:o.baseUrl},n.createElement(r.Z,{href:"/docs/environments"},"BASE_URL")),a),l&&n.createElement(n.Fragment,null,n.createElement("h2",{className:o.h2},"Request"),l.headers&&l.headers.length>0&&n.createElement(n.Fragment,null,n.createElement("h3",{className:o.h3},"Headers"),n.createElement("ul",null,l.headers.map((e=>n.createElement("li",null,n.createElement("span",{className:o.blueTag},e.name)," ",e.description))))),l.example&&n.createElement(s.Z,{language:"json",showLineNumbers:!0},l.example)),c&&c.length>0&&n.createElement(n.Fragment,null,n.createElement("h2",{className:o.h2},"Responses"),c.map((e=>n.createElement("div",{className:o.response},n.createElement("span",{style:{backgroundColor:i[e.status].color},className:o.tag},e.status," ",i[e.status].label),e.description&&` ${e.description}`,e.example&&n.createElement("div",{className:o.responseExample},n.createElement(s.Z,{language:"json",showLineNumbers:!0},e.example))))))))}},7818:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>u});var n=a(7462),s=(a(7294),a(3905)),o=a(7957);a(614);const r={id:"auth",title:"Authentication",slug:"/auth/"},l=void 0,i={unversionedId:"auth",id:"auth",title:"Authentication",description:"To access the API you need to obtain an integration API key in Komodo. This can be done by",source:"@site/docs/auth.mdx",sourceDirName:".",slug:"/auth/",permalink:"/komodo-api-docs/docs/auth/",draft:!1,tags:[],version:"current",frontMatter:{id:"auth",title:"Authentication",slug:"/auth/"},sidebar:"docs",previous:{title:"Environments",permalink:"/komodo-api-docs/docs/environments/"},next:{title:"Data Dictionary",permalink:"/komodo-api-docs/docs/dictionary/"}},c={},u=[{value:"Request",id:"request",level:2}],m={toc:u},d="wrapper";function p(e){let{components:t,...a}=e;return(0,s.kt)(d,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"To access the API you need to obtain an integration API key in Komodo. This can be done by\neither:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Contacting Komodo to issue an organisation-based API key."),(0,s.kt)("li",{parentName:"ul"},"Generating an organisation-based API key in Komodo via Settings > Integrations > Create an Integration.")),(0,s.kt)("p",null,"Any requests to the REST & Cube APIs must include an ",(0,s.kt)("inlineCode",{parentName:"p"},"Authorization")," header, with the value set to the returned token."),(0,s.kt)("h2",{id:"request"},"Request"),(0,s.kt)(o.Z,{type:"POST",url:"/rest/v1/auth/login",request:{headers:[{name:"__x-api-key__",description:"Organisation-based API key issued by Komodo"}]},responses:[{status:200,description:"A successful request will return a short-lived token that can be used to retrieve information from both our REST & Cube APIs",example:'{\n    "token": "eyJhbGciOiJ....."\n}'},{status:400,description:"Missing API key",example:'{\n    "error": "Missing API key",\n}'},{status:401,description:"Invalid API key",example:'{\n    "error": "Invalid API key",\n}'}],mdxType:"ApiRequest"}))}p.isMDXComponent=!0}}]);